name: Packaging

on:
   - push

jobs:
   format:
      name: Check code formatting
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3
         - uses: actions/setup-python@v4.0.0
           with:
              python-version: "3.10"
         - name: Install tox
           run: python -m pip install tox
         - name: Run black
           run: tox -e format
   lint:
      name: Check code linting
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3
         - uses: actions/setup-python@v4.0.0
           with:
              python-version: "3.10"
         - name: Install tox
           run: python -m pip install tox
         - name: Run flake8
           run: tox -e lint
   typecheck:
      name: Static type checking
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3
         - uses: actions/setup-python@v4.0.0
           with:
              python-version: "3.10"
         - name: Install tox
           run: python -m pip install tox
         - name: Run mypy
           run: tox -e typecheck
   test:
      name: Test
      runs-on: ubuntu-latest
      strategy:
         matrix:
            python:
               - version: "3.7"
                 toxenv: "py37"
               - version: "3.8"
                 toxenv: "py38"
               - version: "3.9"
                 toxenv: "py39"
               - version: "3.10"
                 toxenv: "py310"
      steps:
         - uses: actions/checkout@v3
         - uses: actions/setup-python@v4.0.0
           with:
              python-version: ${{ matrix.python.version }}
         - name: Install tox
           run: python -m pip install tox
         - name: Run pytest
           run: tox -e ${{ matrix.python.toxenv }}
   build_wheels:
      name: Build wheels on Ubuntu 20.04
      runs-on: ubuntu-20.04
      steps:
         - uses: actions/checkout@v3
         - uses: actions/setup-python@v4.0.0
           with:
              python-version: "3.10"
         - name: Install build
           run: python -m pip install build
         - name: Build wheels
           run: pyproject-build
         - uses: actions/upload-artifact@v3
           with:
              path: ./dist/*.whl
           
